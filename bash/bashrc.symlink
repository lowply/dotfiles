# .bashrc

# User specific aliases and functions

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# ---------------------------------------------------------------
# Original Setting
# ---------------------------------------------------------------

#
# aliases
#
alias jman='LANG=ja_JP.utf8 man'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ls='ls -v --color=auto'
alias tm='tmux -2u a || tmux -2u'
alias pullall='git pull origin master && git submodule foreach git pull origin master'
alias nstlnp='lsof -nP -iTCP -sTCP:LISTEN'
alias nstanp='lsof -nP -iTCP'
alias lsdsstr='find . -name .DS_Store -print'
alias rmdsstr='find . -name .DS_Store -delete -exec echo removed: {} \;'
type gsed > /dev/null 2>&1 && alias sed='gsed'

#
# functions
#
addpath(){
	[ -d ${1} ] || { echo "[addpath] ${1} does not exist."; return; }
	if [ "${2}" == "man" ]; then
		# for MANPATH
		export MANPATH=${1}:${MANPATH//$1:/}
	else
		# for PATH
		export PATH=${1}:${PATH//$1:/}
	fi
}

check_cmd(){
	type ${1} > /dev/null 2>&1 || { echo "${1} is not installed"; return 1; }
}

peco-run-cmd(){
	if [ -n "$1" ] ; then
		# Replace the last entry, with $1
		history -s $1
		# Execute it
		echo $1 >&2
		eval $1
	else
		# Remove the last entry
		history -d $((HISTCMD-1))
	fi
}

peco-src () {
	check_cmd "peco" || return
	check_cmd "ghq" || return
	local CMD=$(echo $(ghq list -p | peco) | sed -e 's/^/cd /g')
	peco-run-cmd "$CMD"
}

bind '"\C-]":"peco-src\n"'

# http://qiita.com/yungsang/items/09890a06d204bf398eea
peco-history() {
	check_cmd "peco" || return
	local NUM=$(history | wc -l)
	local FIRST=$((-1*(NUM-1)))

	if [ $FIRST -eq 0 ] ; then
		# Remove the last entry, "peco-history"
		history -d $((HISTCMD-1))
		echo "No history" >&2
		return
	fi
	local CMD=$(fc -l $FIRST | sort -k 2 -k 1nr | uniq -f 1 | sort -nr | sed -r 's/^[0-9]+//' | peco | head -n 1)
	peco-run-cmd "$CMD"
}

bind '"\C-r":"peco-history\n"'

peco-snippets() {
	check_cmd "peco" || return
	[ -f ${HOME}/.snippets ] || { echo "Couldn't find ~/.snippets"; return; }
	local CMD=$(grep -v "^#" ~/.snippets | sed '/^$/d' | peco)
	peco-run-cmd "$CMD"
}

bind '"\C-\\":"peco-snippets\n"'


# http://k0kubun.hatenablog.com/entry/2014/07/06/033336
function peco-pkill() {
	check_cmd "peco" || return
	local CMD=$(for pid in $(ps aux | peco | awk '{ print $2 }'); do kill $pid; echo "Killed ${pid}"; done)
	peco-run-cmd "$CMD"
}

alias pk="peco-pkill"


#
# env specific additions
#
if [ -f ${HOME}/.bashrc.local ]; then
	source ${HOME}/.bashrc.local
fi
