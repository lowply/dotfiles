
"======================================================
" NeoBundle Init 
" https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh
"======================================================

"NeoBundle Scripts-----------------------------
if has('vim_starting')
  if &compatible
    set nocompatible               " Be iMproved
  endif

  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" Add or remove your Bundles here:
NeoBundle 'Shougo/neosnippet.vim'
NeoBundle 'Shougo/neosnippet-snippets'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'ctrlpvim/ctrlp.vim'
NeoBundle 'flazz/vim-colorschemes'

"======================================================
" My additions begin
"======================================================

NeoBundle 'Shougo/vimproc.vim', {
      \ 'build' : {
      \     'windows' : 'tools\\update-dll-mingw',
      \     'cygwin' : 'make -f make_cygwin.mak',
      \     'mac' : 'make -f make_mac.mak',
      \     'unix' : 'make -f make_unix.mak',
      \    },
      \ }
NeoBundle 'Shougo/unite.vim'
NeoBundle 'Shougo/neocomplete.vim'
NeoBundle 'tpope/vim-surround'
NeoBundle 'wavded/vim-stylus'
NeoBundle "chase/vim-ansible-yaml"
NeoBundle 'tpope/vim-commentary'
NeoBundle 'bling/vim-airline'
NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'sheerun/vim-polyglot'
NeoBundle 'Shougo/neomru.vim'

"
" Ruby
"
NeoBundle 'vim-ruby/vim-ruby'

"
" Color Scheme
" 
NeoBundle 'altercation/vim-colors-solarized'

"
" since 7.4.414, vim merged go support. if vim is lower than that, use vim-ft-go
"
if !has('patch-7.4.414')
	NeoBundle "google/vim-ft-go"
endif

"
" extra go supports
"
NeoBundle "vim-jp/vim-go-extra"

"
" Vim After 11 Years: http://statico.github.io/vim.html
"
NeoBundle "scrooloose/syntastic"
NeoBundle "vim-scripts/closetag.vim"

"
" Disabled
"
" NeoBundle 'Shougo/vimshell.vim'
" NeoBundle 'Shougo/vimfiler'
" NeoBundle 'vim-scripts/grep.vim'
" NeoBundle "majutsushi/tagbar"
" NeoBundle "fatih/vim-go" " disabled because some functions are duplicated after vim7.4.414

"======================================================
" My additions ends
"======================================================

" Required:
call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck
"End NeoBundle Scripts-------------------------

"======================================================
" Ruby
"======================================================

	au FileType ruby setl nowrap tabstop=2 shiftwidth=2 softtabstop=2 expandtab

"======================================================
" Go
"======================================================

	" use goimports instead of gofmt
	let g:gofmt_command = 'goimports'

	" gocode, not necessary to be in ~/.vim/bundle/
	exe "set rtp+=".globpath($GOPATH, "src/github.com/nsf/gocode/vim")

	autocmd FileType go autocmd BufWritePre <buffer> Fmt
	autocmd FileType go nnoremap <Leader>r :! go run %<CR>

"======================================================
" http://yuroyoro.hatenablog.com/entry/2014/08/12/144157
"======================================================
	autocmd FileType go :highlight goErr ctermfg=210
	autocmd FileType go :match goErr /\<err\>/

"======================================================
" http://mattn.kaoriya.net/software/vim/20130531000559.htm
"======================================================
	set completeopt=menu,preview

"======================================================
" https://github.com/Shougo/neocomplete.vim
"======================================================

	source ~/dotfiles/vim/vimrc_neocomplete

"======================================================
" syntax color
"======================================================

set t_Co=256
syntax on 
let g:solarized_termcolors=256

" Enable termtrans under tmux 1.7 & Terminal.app with xterm-256color environment
" see https://github.com/altercation/vim-colors-solarized
let g:solarized_termtrans=1

set background=dark
colorscheme solarized

"======================================================
" display
"======================================================

"set statusline=%<%f\ %m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=%l,%c%V%8P

"" Disable the blinking cursor.
set gcr=a:blinkon0
set scrolloff=3

"" Status bar
set laststatus=2

"" allow backspacing over everything in insert mode
set backspace=indent,eol,start

"" Use modeline overrides
set modeline
set modelines=10

set title
set titleold="Terminal"
set titlestring=%F

set statusline=%F%m%r%h%w%=(%{&ff}/%Y)\ (line\ %l\/%L,\ col\ %c)\ %{fugitive#statusline()}

let g:airline_theme = 'powerlineish'
let g:airline_enable_branch = 1

"======================================================
" tab
"======================================================

" set expandtab
set tabstop=4
set softtabstop=0
set shiftwidth=4
set smarttab
set shiftround
set nowrap

"======================================================
" edit
"======================================================

set whichwrap=b,s,h,l,<,>,[,]
set autoindent
set smartindent
"set showmatch
let loaded_matchparen = 1
vnoremap < <gv
vnoremap > >gv

"======================================================
" search
"======================================================

set hlsearch
nnoremap <Esc><Esc> :nohlsearch<CR><Esc>
set incsearch
set ignorecase
set wrapscan
set smartcase

"======================================================
" backup
"======================================================

set backup
set backupdir=~/.vim_tmp
set swapfile
set directory=~/.vim_tmp

"======================================================
" encoding
"======================================================

set termencoding=utf-8
set encoding=utf-8

"======================================================
" tab editing
"======================================================

nnoremap s <Nop>
nnoremap sq :<C-u>q<CR>
nnoremap sw :<C-u>wq<CR>
nnoremap st :<C-u>tabnew<CR>
nnoremap sT :<C-u>Unite tab<CR>
nnoremap sn gt
nnoremap sp gT

"======================================================
" some utils
"======================================================

inoremap jk <esc>

" http://deris.hatenablog.jp/entry/2013/05/02/192415
nnoremap Q <Nop>
nnoremap ZZ <Nop>
nnoremap ZQ <Nop>

nnoremap ; :
nnoremap : ;

let mapleader = ","
noremap \ ,

nnoremap <Leader>vv :<C-u>VimShell<CR>


" http://monmon.hateblo.jp/entry/20100902/1283388287
set pastetoggle=<C-E>

"======================================================
" Unite
" ref: http://deris.hatenablog.jp/entry/2013/05/02/192415
"======================================================

nnoremap [unite] <Nop>
nmap <Space>f [unite]

let g:unite_enable_start_insert=1
let g:unite_source_history_yank_enable =1
nnoremap [unite]u  :<C-u>Unite -no-split<Space>
nnoremap <silent> [unite]f :<C-u>Unite<Space>buffer<CR>
nnoremap <silent> [unite]b :<C-u>Unite<Space>bookmark<CR>
nnoremap <silent> [unite]m :<C-u>Unite<Space>file_mru<CR>
nnoremap <silent> [unite]r :<C-u>UniteWithBufferDir file<CR>

"======================================================
" VimFiler
" ref: http://www.karakaram.com/vimfiler
"======================================================

let g:vimfiler_as_default_explorer = 1
nnoremap <silent> <Leader>fe :<C-u>VimFilerBufferDir -quit<CR>
nnoremap <silent> <Leader>fi :<C-u>VimFilerBufferDir -split -simple -winwidth=35 -no-quit<CR>

"======================================================
" useful settings from
" http://itchyny.hatenablog.com/entry/2014/12/25/090000
"======================================================

nnoremap Y y$
set display=lastline
set pumheight=10
set showmatch
set matchtime=1
augroup swapchoice-readonly
  autocmd!
  autocmd SwapExists * let v:swapchoice = 'o'
augroup END

"======================================================
" environment specific configuration
"======================================================

if filereadable(expand($HOME.'/.vimrc.local'))
	source ~/.vimrc.local
endif

